<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 맵퍼파일 생성 후 반드시 sql-map-config.xml 파일에 mapper 등록해줘야 함 -->
<mapper namespace="memberMapper">

	<resultMap type="com.spring.biz.vo.MemInfoVO" id="memInfo">
		<result column="MEM_EMAIL"           property="memEmail"/> 
		<result column="MEM_PASS"      	      property="memPass"/> 
		<result column="MEM_NAME"        	  property="memName"/> 
		<result column="MEM_AGE"         	  property="memAge"/> 
		<result column="MEM_GENDER"			  property="memGender"/> 
		<result column="MEM_BIRTH"		  	  property="memBirth"/>
		<result column="MEM_TEL1"     	  	  property="memTel1"/> 
		<result column="MEM_TEL2"          	  property="memTel2"/> 
		<result column="MEM_ADDR"          	  property="memAddr"/> 
		<result column="DEL_YN"           	  property="delYn"/> 
		<result column="MEM_JOIN_DATE"    	  property="memJoinDate"/> 
		<result column="IS_ADMIN"			  property="isAdmin"/> 
		<result column="MEM_IMAGE"        	  property="memImage"/> 
	</resultMap>

	<resultMap type="com.spring.biz.vo.CompanyInfoVO" id="companyInfo">
		<result column="COM_NUM"           		property="comNum"/> 
		<result column="COM_PASS"      	     	property="comPass"/> 
		<result column="COM_EMAIL"        		property="comEmail"/> 
		<result column="COM_NAME"         	  	property="comName"/> 
		<result column="COM_CEO"        		property="comCeo"/> 
		<result column="COM_LOC"        	 	property="comLoc"/> 
		<result column="COM_TYPE"           	property="comType"/> 
		<result column="COM_TEL"           		property="comTel"/> 
		<result column="COM_JOIN_DATE"         property="comJoinDate"/> 
		<result column="COM_AVG_SCORE"         property="comAvgScore"/> 
		<result column="COM_GIVE_PERSON"       property="comGivePerson"/> 
		<result column="COM_SCORE"           	property="comScore"/> 
	</resultMap>
	
	<resultMap type="com.spring.biz.vo.MemResumeVO" id="memResume">
		<result column="RESUME_NUM"            property="resumeNum"/> 
		<result column="RESUME_NAME"      	    property="resumeName"/> 
		<result column="RESUME_DATE"        	property="resumeDate"/> 
		<result column="EDU_GRADE"         	  	property="eduGrade"/> 
		<result column="EDU_SCHOOL"         	property="eduSchool"/> 
		<result column="EDU_LOC"         	 	property="eduLoc"/> 
		<result column="EDU_TYPE"         	  	property="eduType"/> 
		<result column="EDU_MAJOR"         	  	property="eduMajor"/> 
		<result column="EDU_BEGIN_DATE"        property="eduBeginDate"/> 
		<result column="EDU_END_DATE"         	property="eduEndDate"/> 
		<result column="EDU_SCORE"         		property="eduScore"/>
		<result column="EDU_IS_OVER"         	property="eduIsOver"/> 
		<result column="BE_COMPANY"         	property="beCompany"/> 
		<result column="BE_CAREER"         	  	property="beCareer"/> 
		<result column="BE_TYPE"         	  	property="beType"/> 
		<result column="BE_POSITION"         	property="bePosition"/> 
		<result column="MEM_EMAIL"         	  	property="memEmail"/> 
		<result column="HOPE_TYPE"         	  	property="hopeType"/> 
		<result column="HOPE_SAL"         	  	property="hopeSal"/> 
		<result column="HOPE_LOC"         	  	property="hopeLoc"/> 
		<result column="HOPE_TIME"         	  	property="hopeTime"/> 
		<result column="MEM_EMAIL"				property="memEmail"/>
	</resultMap>
	
	<resultMap type="com.spring.biz.vo.LicenseVO" id="license">
		<result column="LIC_NUM"		property="licNum"/>
		<result column="LIC_NAME"		property="licName"/>
		<result column="LIC_LOC"		property="licLoc"/>
		<result column="LIC_GRADE"		property="licGrade"/>
		<result column="LIC_DATE"		property="licDate"/>
	</resultMap>
	
	<resultMap type="com.spring.biz.vo.ProfilesVO" id="profiles">
		<result column="PRO_NUM"		property="proNum"/>
		<result column="PRO_TITLE"		property="proTitle"/>
		<result column="PRO_CONTENT"	property="proContent"/>
	</resultMap>
	
	<resultMap type="com.spring.biz.vo.LikeCompanyVO" id="likeCompany">
		<result column="LIKE_NUM"			property="likeNum"/>
		<result column="COM_NUM"			property="comNum"/>
		<result column="MEM_EMAIL"			property="memEmail"/>
		<result column="COM_NAME"			property="comName"/>
		<result column="ANNOUNCE_NUM"		property="announceNum"/>
	</resultMap>
	
	<resultMap type="com.spring.biz.vo.LikeRecruitVO" id="likeRecruit">
		<result column="LIKE_RECRUIT_NUM"	property="likeRecruitNum"/>
		<result column="ANNOUNCE_NUM"		property="announceNum"/>
		<result column="MEM_EMAIL"			property="memEmail"/>
	</resultMap>
	
	<!-- 이력서 insert -->
	<insert id="insertResume">
		INSERT INTO MEM_RESUME (
			RESUME_NUM
			, RESUME_NAME
			, EDU_GRADE
			, EDU_SCHOOL
			, EDU_LOC
			, EDU_TYPE
			, EDU_MAJOR
			, EDU_BEGIN_DATE
			, EDU_END_DATE
			, EDU_IS_OVER
			, EDU_SCORE
			, BE_COMPANY
			, BE_CAREER
			, BE_TYPE
			, BE_POSITION
			, HOPE_TYPE
			, HOPE_SAL
			, HOPE_LOC
			, HOPE_TIME
			, MEM_EMAIL
		) VALUES (
			(SELECT NVL(MAX(RESUME_NUM) + 1 , 1) FROM MEM_RESUME)
			, #{resumeName}
			, #{eduGrade}
			, #{eduSchool}
			, #{eduLoc}
			, #{eduType}
			, #{eduMajor}
			, #{eduBeginDate}
			, #{eduEndDate}
			, #{eduIsOver}
			, #{eduScore}
			, #{beCompany}
			, #{beCareer}
			, #{beType}
			, #{bePosition}
			, #{hopeType}
			, #{hopeSal}
			, #{hopeLoc}
			, #{hopeTime}
			, #{memEmail}
		)
	</insert>
	
	<insert id="insertLicense">
		INSERT ALL
		<foreach collection="licenseList" item="license" index="index">
			INTO LICENSE (
				LIC_NUM
				, LIC_NAME
				, LIC_LOC
				, LIC_GRADE
				, LIC_DATE
				, RESUME_NUM
			) VALUES (
				(SELECT NVL(MAX(LIC_NUM)+1,1) + #{index} FROM LICENSE)
			 	, #{license.licName}
			 	, #{license.licLoc}
			 	, #{license.licGrade}
			 	, #{license.licDate}
			 	, (SELECT NVL(MAX(RESUME_NUM), 1) FROM MEM_RESUME)
			)
		</foreach>
		SELECT * FROM DUAL
	</insert>
	
	<insert id="insertProfiles">
		INSERT ALL
		<foreach collection="profilesList" item="pro" index="index">
			INTO PROFILES (
				PRO_NUM
				, PRO_TITLE
				, PRO_CONTENT
				, RESUME_NUM
			) VALUES (
				(SELECT NVL(MAX(PRO_NUM)+1,1) + #{index} FROM PROFILES)
			 	, #{pro.proTitle}
			 	, #{pro.proContent}
			 	, (SELECT NVL(MAX(RESUME_NUM), 1) FROM MEM_RESUME)
			)
		</foreach>
		SELECT * FROM DUAL
	</insert>

	<update id="updateMemInfo">
		UPDATE MEM_INFO
		SET MEM_NAME = #{memName}
			, MEM_PASS = #{memPass}
			, MEM_TEL1 = #{memTel1}
			, MEM_TEL2 = #{memTel2}
			, MEM_ADDR = #{memAddr}
			<if test="memImage != null">
			, MEM_IMAGE = #{memImage}
			</if>
		WHERE MEM_EMAIL = #{memEmail}
	</update>
	
	<select id="selectMemInfoME" resultMap="memInfo">
		SELECT MEM_EMAIL
			, MEM_PASS
			, MEM_NAME
			, MEM_BIRTH
			, MEM_AGE
			, MEM_TEL1
			, MEM_TEL2
			, MEM_GENDER
			, MEM_ADDR
			, IS_ADMIN
			, MEM_IMAGE
		FROM MEM_INFO
		WHERE MEM_EMAIL = #{memEmail}
	</select>
	
	<select id="selectResumeList" resultMap="memResume">
		SELECT RESUME_NUM
			, RESUME_NAME
		FROM MEM_RESUME
		WHERE MEM_EMAIL = #{memEmail}
	</select>
	
	<select id="selectResumeDetail" resultMap="memResume">
		SELECT
			RESUME_NUM
			, RESUME_NAME
			, RESUME_DATE
			, EDU_GRADE
			, EDU_SCHOOL
			, EDU_LOC
			, EDU_TYPE
			, EDU_MAJOR
			, EDU_BEGIN_DATE
			, EDU_END_DATE
			, EDU_IS_OVER
			, EDU_SCORE
			, BE_COMPANY
			, BE_CAREER
			, BE_TYPE
			, BE_POSITION
			, HOPE_TYPE
			, HOPE_SAL
			, HOPE_LOC
			, HOPE_TIME
		FROM MEM_RESUME
		WHERE RESUME_NUM = #{resumeNum}
	</select>
	
	<select id="selectLicenseList" resultMap="license">
		SELECT
			LIC_NUM
			, LIC_NAME
			, LIC_LOC
			, LIC_GRADE
			, LIC_DATE
		FROM LICENSE
		WHERE RESUME_NUM = #{resumeNum}
	</select>
	
	<select id="selectProfilesList" resultMap="profiles">
		SELECT
			PRO_NUM
			, PRO_TITLE
			, PRO_CONTENT
		FROM PROFILES
		WHERE RESUME_NUM = #{resumeNum}
	</select>
	
	<!-- 하트를 눌렀는지에 대해 확인 -->
	<select id="chkHeart" resultMap="likeCompany">
		SELECT * FROM LIKE_COMPANY
        WHERE ANNOUNCE_NUM = #{announceNum}
        AND MEM_EMAIL = #{memEmail}
	</select>
	
	<!-- 하트 눌렀을 때 -->
	<insert id="insertLikeCompany">
		INSERT INTO LIKE_COMPANY(
			LIKE_NUM
			, COM_NUM
			, MEM_EMAIL
			, ANNOUNCE_NUM
		)VALUES(
			(SELECT NVL(MAX(LIKE_NUM) + 1, 1) FROM LIKE_COMPANY)
			, #{comNum}
			, #{memEmail}
			, #{announceNum}
		)
	</insert>
	
	<!-- 하트를 다시 눌렀을 때 -->
	<delete id="deleteLikeCompany">
		DELETE LIKE_COMPANY
		WHERE ANNOUNCE_NUM = #{announceNum} 
		AND MEM_EMAIL = #{memEmail}
	</delete>
	
	<!-- 관심 기업 조회 -->
	<select id="selectLikeCompany" resultMap="likeCompany">
		SELECT LIKE_NUM
			, C.COM_NUM 
			, C.COM_NAME
			, MEM_EMAIL
			, ANNOUNCE_NUM
		FROM LIKE_COMPANY L, COMPANY_INFO C
		WHERE L.COM_NUM = C.COM_NUM
		AND MEM_EMAIL = #{memEmail}
		ORDER BY ANNOUNCE_NUM DESC
	</select>
	
	<!-- 관심 공고 조회 -->
	<select id="selectLikeRecruitList" resultMap="likeRecruit">
		SELECT LIKE_RECRUIT_NUM
			, ANNOUNCE_NUM
			, MEM_EMAIL
		FROM LIKE_RECRUIT
	</select>
</mapper>
