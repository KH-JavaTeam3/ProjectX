<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 맵퍼파일 생성 후 반드시 sql-map-config.xml 파일에 mapper 등록해줘야 함 -->
<mapper namespace="commonMapper">

	<resultMap type="com.spring.biz.vo.MemInfoVO" id="memInfo">
		<result column="MEM_EMAIL"           property="memEmail"/> 
		<result column="MEM_PASS"      	      property="memPass"/> 
		<result column="MEM_NAME"        	  property="memName"/> 
		<result column="MEM_AGE"         	  property="memAge"/> 
		<result column="MEM_GENDER"			  property="memGender"/> 
		<result column="MEM_BIRTH"		  	  property="memBirth"/>
		<result column="MEM_TEL1"     	  	  property="memTel1"/> 
		<result column="MEM_TEL2"          	  property="memTel2"/> 
		<result column="MEM_ADDR"          	  property="memAddr"/> 
		<result column="DEL_YN"           	  property="delYn"/> 
		<result column="MEM_JOIN_DATE"    	  property="memJoinDate"/> 
		<result column="IS_ADMIN"			  property="isAdmin"/> 
		<result column="MEM_IMAGE"        	  property="memImage"/> 
	</resultMap>

	
	
	<resultMap type="com.spring.biz.vo.CompanyInfoVO" id="companyInfo">
		<result column="COM_NUM"           		property="comNum"/> 
		<result column="COM_PASS"      	     	property="comPass"/> 
		<result column="COM_EMAIL"        		property="comEmail"/> 
		<result column="COM_NAME"         	  	property="comName"/> 
		<result column="COM_CEO"        		property="comCeo"/> 
		<result column="COM_LOC"        	 	property="comLoc"/> 
		<result column="COM_LOC_DETAIL"        	property="comLocDetail"/> 
		<result column="COM_TYPE"           	property="comType"/> 
		<result column="COM_TEL"           		property="comTel"/> 
		<result column="COM_JOIN_DATE"         property="comJoinDate"/> 
		<result column="COM_IMAGE"           	property="comImage"/> 
	</resultMap>

	<resultMap type="com.spring.biz.vo.RecruitListVO" id="recruitlist">
		<result column="ANNOUNCE_NUM" 			property="announceNum" />
		<result column="ANNOUNCE_TITLE" 		property="announceTitle" />
		<result column="ANNOUNCE_CONTENT" 		property="announceContent" />
		<result column="WRITE_DATE" 			property="writeDate" />
		<result column="UPTO_HIREDATE" 			property="uptoHiredate" />
		<result column="HIRE_NUM" 				property="hireNum" />
		<result column="COM_NUM" 				property="comNum" />
		<result column="JOBTYPE" 				property="jobtype" />
		<result column="COM_NAME" 				property="comName" />
		<result column="WORKTIME" 				property="worktime" />
		<result column="WORK_TYPE" 				property="workType" />
		<result column="ANNI_SAL" 				property="anniSal" />
		<result column="QUALIFICATION" 			property="qualification" />
		<result column="HIRE_CONDITION" 		property="hireCondition" />
		<result column="REGIST_IMAGE" 			property="registImage" />
		<result column="BENEFIT" 				property="benefit" />
		<result column="CAREER" 				property="career" />
		<result column="ACADEMIC_BACKGROUND" 	property="academicBackground" />
		<result column="AREA" 					property="area" />
		<result column="CORPORATE_NAME" 		property="corporateName" />
		<result column="RECRUIT_VIEWS" 			property="recruitViews" />
		<result column="COM_CEO" 				property="comCeo" />
		<result column="COM_LOC" 				property="comLoc" />
		<result column="COM_TEL" 				property="comTel" />
		<result column="COM_EMAIL" 				property="comEmail" />
		<result column="COM_TYPE" 				property="comType" />
	</resultMap>
	
	<resultMap type="com.spring.biz.vo.ForRecruitVO" id="forRecruit">
		<result column="COM_NUM"            	  property="comNum"/> 
		<result column="ANNOUNCE_NUM"      	      property="announceNum"/> 
		<result column="COM_MYPAGE_NUM"        	  property="comMypageNum"/> 
		<result column="RESUME_NUM"         	  property="resumeNum"/> 
		<result column="RESUME_RESULT"         	  property="resumeResult"/> 
	</resultMap>
	
	
<!-- 	개인 회원가입 -->
	<insert id="insertMemInfo">
		INSERT INTO MEM_INFO (
			MEM_EMAIL
			, MEM_PASS
			, MEM_NAME
			, MEM_AGE
			, MEM_BIRTH
			, MEM_GENDER
			, MEM_TEL1
			, MEM_ADDR
		) VALUES (
			#{memEmail}
			, #{memPass}
			, #{memName}
			, TO_CHAR(SYSDATE, 'YYYY') -  SUBSTR(#{memBirth},1,4) + 1
			, #{memBirth}
			, #{memGender}
			, #{memTel1}
			, #{memAddr}
		)
	</insert>
	
<!-- 	개인 회원가입 이메일 중복 체크 -->
	<select id="selectEmailChk" resultType="string">
		SELECT MEM_EMAIL
		FROM MEM_INFO
		WHERE MEM_EMAIL = #{memEmail}
	</select>
	
	<!-- 기업 회원가입 -->
	<insert id="insertCompanyInfo">
		INSERT INTO COMPANY_INFO (
			COM_NUM
			, COM_PASS
			, COM_EMAIL
			, COM_NAME
			, COM_CEO
			, COM_LOC
			, COM_LOC_DETAIL
			, COM_TYPE
			, COM_TEL
		) VALUES (
			#{comNum}
			, #{comPass}
			, #{comEmail}
			, #{comName}
			, #{comCeo}
			, #{comLoc}
			, #{comLocDetail}
			, #{comType}
			, #{comTel}
		)
	</insert>
	
	<!-- 	개인 회원가입 이메일 중복 체크 -->
	<select id="selectComNumChk" resultType="string">
		SELECT COM_NUM
		FROM COMPANY_INFO
		WHERE COM_NUM = #{comNum}
	</select>
	
	
	<!-- 개인 로그인 -->
	<select id="memberLogin" resultMap="memInfo"> 
		SELECT
		    MEM_EMAIL
		    ,MEM_PASS
		    ,MEM_NAME
		    ,MEM_AGE
		    ,MEM_GENDER
		    ,MEM_BIRTH
		    ,MEM_TEL1
		    ,MEM_TEL2
		    ,MEM_ADDR
		    ,MEM_JOIN_DATE
		    ,IS_ADMIN
		    ,MEM_IMAGE
		FROM MEM_INFO WHERE MEM_EMAIL = #{memEmail}
		 AND MEM_PASS = #{memPass}
	</select>

	<!-- 자동로그인용 개인 조회 -->
	<select id="findMember" resultMap="memInfo">
		SELECT
		    MEM_EMAIL
		    ,MEM_PASS
		FROM MEM_INFO WHERE SESSION_ID = #{getId}
	</select>

	<!-- 자동로그인용 쿠키 업데이트 -->
	<update id="updateCookie">
		UPDATE	MEM_INFO
		SET SESSION_ID = #{setId}
		WHERE MEM_EMAIL = #{memEmail}
	</update>

<!-- 	이메일 인증 후 비밀번호 입력 -->
	<update id="updateMemCodePass">
		UPDATE MEM_INFO
		SET MEM_PASS = #{memPass}
		WHERE MEM_EMAIL = #{memEmail}
	</update>


	<!-- 	개인 정보 수정 -->
	<update id="memUpdate">
		UPDATE MEM_INFO 
		SET MEM_PASS = #{memPass}
		    ,MEM_NAME = #{memName}
		    ,MEM_GENDER = #{memGender}
		    ,MEM_BIRTH = #{memBirth}
		    ,MEM_TEL1 = #{memTel1}
		    ,MEM_TEL2 = #{memTel2}
		    ,MEM_ADDR = #{memAddr}
		    ,MEM_MERRY = #{memMerry}
		WHERE MEM_EMAIL = #{memEmail}
	</update>
	

<!-- 	기업 로그인 -->
	<select id="companyLogin" resultMap="companyInfo">
		SELECT
			COM_NUM
			, COM_PASS
			, COM_EMAIL
			, COM_NAME
			, COM_CEO
			, COM_LOC
			, COM_LOC_DETAIL
			, COM_TYPE
			, COM_TEL
			, COM_JOIN_DATE
			, COM_IMAGE
		FROM COMPANY_INFO
		WHERE COM_NUM = #{comNum}
		AND COM_PASS = #{comPass}
	</select>

<!-- 	기업 자동로그인 쿠키 업데이트 -->
	<update id="updateComCookie">
		UPDATE COMPANY_INFO
		SET COM_SESSION_ID = #{setId}
		WHERE COM_NUM = #{comNum}
	</update>

<!-- 	이메일 인증 후 비밀번호 입력 -->
	<update id="updateComCodePass">
		UPDATE COMPANY_INFO
		SET COM_PASS = #{comPass}
		WHERE COM_EMAIL = #{comEmail}
	</update>

<!-- 자동로그인용 기업 조회 -->
	<select id="findComMember" resultMap="companyInfo">
		SELECT COM_NUM
			, COM_PASS
		FROM COMPANY_INFO 
		WHERE COM_SESSION_ID = #{getId}
	</select>

<!-- 	채용공고 상세 보기 -->
	<select id="selectDetailRecruit" resultMap="recruitlist">
	SELECT
		ANNOUNCE_NUM
		,ANNOUNCE_TITLE
		,ANNOUNCE_CONTENT
		,UPTO_HIREDATE
		,HIRE_NUM
		,JOBTYPE
		,WORKTIME
		,WORK_TYPE
		,ANNI_SAL
		,QUALIFICATION
		,BENEFIT
		,REGIST_IMAGE
		,CAREER
		,ACADEMIC_BACKGROUND
		,AREA
		,COM_NAME
		,R.COM_NUM
		,RECRUIT_VIEWS
		,C.COM_LOC
		,C.COM_EMAIL
		,C.COM_TEL
	FROM RECRUIT_LIST R, COMPANY_INFO C
	WHERE R.COM_NUM = C.COM_NUM
	AND R.COM_NUM = #{comNum}
	AND ANNOUNCE_NUM = #{announceNum}
	</select>
	
<!-- 	채용공고 조회수 증가 -->
	<update id="updateViews">
		UPDATE RECRUIT_LIST
		SET RECRUIT_VIEWS = (SELECT (MAX(RECRUIT_VIEWS) +1) FROM RECRUIT_LIST WHERE ANNOUNCE_NUM = #{announceNum})
		WHERE ANNOUNCE_NUM = #{announceNum}
	</update>

<!-- 검색기능 -->
	 <select id="selectRecruitList" resultMap="recruitlist">		
		SELECT
			ANNOUNCE_NUM
			,COM_NAME
			,ANNOUNCE_TITLE
			,UPTO_HIREDATE
			,WORK_TYPE
			,CAREER
			,ACADEMIC_BACKGROUND
			,JOBTYPE
			,AREA
			,R.COM_NUM
			,RECRUIT_VIEWS
		FROM RECRUIT_LIST R, COMPANY_INFO C
		WHERE R.COM_NUM= C.COM_NUM	
		AND HIRE_CONDITION = 'Y'
		
		<!-- 검색 조건 --> 				
		<if test="keyword != '' and place == '' and jobtype == '' ">	
			AND (UPPER(COM_NAME) Like UPPER('%'||#{keyword}||'%')
			OR UPPER(ANNOUNCE_TITLE) Like UPPER('%'||#{keyword}||'%')
			OR UPPER(WORK_TYPE) Like UPPER('%'||#{keyword}||'%')
			OR UPPER(JOBTYPE) Like UPPER('%'||#{keyword}||'%')
			OR UPPER(QUALIFICATION) Like UPPER('%'||#{keyword}||'%')
			OR UPPER(BENEFIT) Like UPPER('%'||#{keyword}||'%')
			OR UPPER(ACADEMIC_BACKGROUND) Like UPPER('%'||#{keyword}||'%')
			OR UPPER(AREA) Like UPPER('%'||#{keyword}||'%'))					
		</if>
		
	  	<if test="keyword != '' and place == '' and jobtype != '' ">
			AND (JOBTYPE =#{jobtype}
			OR UPPER(COM_NAME) Like UPPER('%'||#{keyword}||'%')	
			OR UPPER(ANNOUNCE_TITLE) Like UPPER('%'||#{keyword}||'%')
			OR UPPER(WORK_TYPE) Like UPPER('%'||#{keyword}||'%')
			OR UPPER(QUALIFICATION) Like UPPER('%'||#{keyword}||'%')
			OR UPPER(BENEFIT) Like UPPER('%'||#{keyword}||'%')
			OR UPPER(ACADEMIC_BACKGROUND) Like UPPER('%'||#{keyword}||'%')
			OR UPPER(AREA) Like UPPER('%'||#{keyword}||'%'))
		</if> 
		
		<if test="keyword != '' and place != '' and jobtype == '' ">
			AND (AREA = #{place}
			OR UPPER(COM_NAME) Like UPPER('%'||#{keyword}||'%')				
			OR UPPER(ANNOUNCE_TITLE) Like UPPER('%'||#{keyword}||'%')
			OR UPPER(WORK_TYPE) Like UPPER('%'||#{keyword}||'%')
			OR UPPER(JOBTYPE) Like UPPER('%'||#{keyword}||'%')
			OR UPPER(QUALIFICATION) Like UPPER('%'||#{keyword}||'%')
			OR UPPER(BENEFIT) Like UPPER('%'||#{keyword}||'%')
			OR UPPER(ACADEMIC_BACKGROUND) Like UPPER('%'||#{keyword}||'%'))
		</if>

		<if test="keyword == '' and place != '' and jobtype != '' ">
			AND (AREA = #{place}
			AND JOBTYPE =#{jobtype})
		</if>
	
		<if test="keyword == '' and place != '' and jobtype == '' ">
			AND AREA = #{place}
		</if>
	
		<if test="keyword == '' and place == '' and jobtype != '' ">
			AND JOBTYPE =#{jobtype}
		</if>
		 
		<if test="keyword != '' and place != '' and jobtype != '' ">
			AND (AREA = #{place}
			OR JOBTYPE =#{jobtype}			
			OR UPPER(COM_NAME) Like UPPER('%'||#{keyword}||'%')			
			OR UPPER(ANNOUNCE_TITLE) Like UPPER('%'||#{keyword}||'%')
			OR UPPER(WORK_TYPE) Like UPPER('%'||#{keyword}||'%')
			OR UPPER(QUALIFICATION) Like UPPER('%'||#{keyword}||'%')
			OR UPPER(BENEFIT) Like UPPER('%'||#{keyword}||'%')
			OR UPPER(ACADEMIC_BACKGROUND) Like UPPER('%'||#{keyword}||'%'))			
		</if>
	</select> 
	<!-- 기업 지원한 사람 나이 셀렉트 -->
	<select id="selectMemberAge" resultType="int">
		SELECT MEM_AGE
		FROM MEM_INFO I , MEM_RESUME R, COM_MYPAGE M, RECRUIT_LIST L
		WHERE I.MEM_EMAIL = R.MEM_EMAIL
		AND R.RESUME_NUM = M.RESUME_NUM
		AND M.COM_NUM =L.COM_NUM
		AND L.ANNOUNCE_NUM =#{announceNum}
	</select>
<!-- 기업 지원한 성별 셀렉트 -->
	<select id="selectMemberGender" resultType="string">
		SELECT MEM_GENDER
		FROM MEM_INFO I , MEM_RESUME R, COM_MYPAGE M, RECRUIT_LIST L
		WHERE I.MEM_EMAIL = R.MEM_EMAIL
		AND R.RESUME_NUM = M.RESUME_NUM
		AND M.COM_NUM =L.COM_NUM
		AND L.ANNOUNCE_NUM =#{announceNum}
	</select>
<!-- 시간 카운트 다운 -->
	<select id="selectTime" resultType="string">
		SELECT UPTO_HIREDATE
		FROM RECRUIT_LIST
		WHERE ANNOUNCE_NUM =#{announceNum}
	</select>
	
	
	
	<!-- 실행시 날짜가 지난 공고목록 조회 -->
	<select id="selectOldList" resultMap="recruitlist">
		SELECT ANNOUNCE_NUM 
		FROM RECRUIT_LIST
		WHERE UPTO_HIREDATE &lt; #{toDay}
	</select>

	<!-- 날짜가 지난 공고 업데이트 -->
	<update id="oldListUpdate">
		UPDATE RECRUIT_LIST SET HIRE_CONDITION = 'N'
		WHERE ANNOUNCE_NUM = #{announceNum}
	</update>

	<!-- 이력서 지원 넣기 -->
	<insert id="insertComMypage">
		INSERT INTO COM_MYPAGE(
		    COM_MYPAGE_NUM
		    ,COM_NUM
		    ,ANNOUNCE_NUM
		    ,RESUME_NUM
		    ,RESUME_RESULT
		) VALUES(
		    (SELECT NVL(MAX(COM_MYPAGE_NUM)+1,1) FROM COM_MYPAGE)
		    ,#{comNum}
		    ,#{announceNum}
		    ,#{resumeNum}
		    ,'N'
		)
	</insert>

	<select id="selectAddress" resultType="String">
		SELECT COM_LOC
		FROM COMPANY_INFO C,RECRUIT_LIST R
		WHERE C.COM_NUM =R.COM_NUM
		AND R.ANNOUNCE_NUM=#{announceNum}	
		
	</select>
<!-- 기업 이름만 뽑자 -->
	<select id="selectComNameList" resultMap="recruitlist">
		select DISTINCT
		   	 C.COM_NUM
		    ,C.COM_NAME
		    ,C.COM_CEO
		    ,C.COM_LOC
		    ,C.COM_LOC_DETAIL
		    ,C.COM_TYPE
		    ,C.COM_TEL
		    ,C.COM_EMAIL
		from COMPANY_INFO C , RECRUIT_LIST R
		WHERE C.COM_NUM = R.COM_NUM
		AND HIRE_CONDITION = 'Y'
		ORDER BY COM_NUM
	</select>
	
	<!-- 기업 이름 뽑은거로 공고 리스트 조회 -->
	<select id="selectComNameAsRecruitList" resultMap="recruitlist">
		SELECT      
			ANNOUNCE_NUM
			,ANNOUNCE_TITLE
			,UPTO_HIREDATE
			,WORK_TYPE
			,CAREER
			,ACADEMIC_BACKGROUND
			,JOBTYPE
			,AREA
			,R.COM_NUM
			,RECRUIT_VIEWS
            ,C.COM_NAME
            ,C.COM_CEO
            ,C.COM_LOC
            ,C.COM_LOC_DETAIL
            ,C.COM_TEL
            ,C.COM_EMAIL
            ,R.RECRUIT_VIEWS
		FROM RECRUIT_LIST R, COMPANY_INFO C
		WHERE R.COM_NUM= C.COM_NUM
		AND HIRE_CONDITION = 'Y'
        ORDER BY R.COM_NUM
	</select>
    
    <!-- 메인페이지 조회수 높은 뇨속 출력 -->
    <select id="selectViewsList" resultMap="recruitlist">
    	SELECT 
		    ANNOUNCE_NUM
		    ,ANNOUNCE_TITLE
		    ,ANNOUNCE_CONTENT
		    ,UPTO_HIREDATE
		    ,R.COM_NUM
		    ,C.COM_NAME
		    ,JOBTYPE
		    ,WORK_TYPE
		    ,REGIST_IMAGE
		    ,RECRUIT_VIEWS
		FROM RECRUIT_LIST R, COMPANY_INFO C
		WHERE RECRUIT_VIEWS &gt; 0
		AND R.COM_NUM = C.COM_NUM 
		ORDER BY RECRUIT_VIEWS DESC
    </select>
	
</mapper>
